#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov 18 18:11:53 2022
"""

import numpy as np
import tensorflow.keras as K
from sklearn.metrics import confusion_matrix

from tensorflow.keras.models import load_model


#%% load data

(x_train, y_train), (x_test, y_test) = K.datasets.cifar10.load_data()
x_train = x_train.astype('float32')
x_test = x_test.astype('float32')

y_train = K.utils.to_categorical(y_train, 10)
y_test = K.utils.to_categorical(y_test, 10)
    
      

mean = np.mean(x_train,axis=(0,1,2,3))
std = np.std(x_train, axis=(0, 1, 2, 3))
X_train=(x_train-mean)/(std+1e-7)
X_test = (x_test-mean)/(std+1e-7)

#%% load unpruned/pruned models

model = load_model('~/VGG16_cifar10/pruned_model_VGG16_93/pruned_VGG16_cifar10.h5')
predicted_x = model.predict(X_test)
y_true = np.argmax(y_test,1)
y_pred = np.argmax(predicted_x,1)
C=confusion_matrix(y_true, y_pred)



acc=np.trace(C)*100/np.shape(y_pred)[0]

print(acc)
